data <- load('rsa911_02to12.RData')
head(data)
head(data, n = 7)
head(rsa911, n = 7)
str(data)
str(rsa911)
head(rsa911$clsrtype)
rsa911$outcome <- (rsa911$clsrtype == 3)
str(rsa911)
library(caret)
sampleTestData <- createDataPartition(y=rsa911$clsrtype, p=0.25, list=FALSE)
str(sampleTestData)
sampleTrainingData <- rsa911[sampleTestData,]
dim(sampleTrainingData)
sampleTrainingData$outcome <- (sampleTrainingData$clsrtype == 3)
load('rsa911_02to12.RData')
sampleTestData <- createDataPartition(y=rsa911$clsrtype, p=0.10, list=FALSE)
rsa911$outcome <- (rsa911$clsrtype == 3)
sampleTrainingData <- rsa911[sampleTestData,]
sampleTrainingData$outcome <- (sampleTrainingData$clsrtype == 3)
sampleTrainingData$clsrtype <- NULL
dim(sampleTrainingData)
head(sampleTrainingData$outcome)
str(sampleTrainingData)
sampleTrainingDataSubsetColumns <- sampleTrainingData[,(sampleTrainingData$prevclsr, sampleTrainingData$gender, sampleTrainingData$white, sampleTrainingData$black, sampleTrainingData$aian, sampleTrainingData$asian, sampleTrainingData$nhpi, sampleTrainingData$appleduc, sampleTrainingData$majorimp, sampleTrainingData$applwork, sampleTrainingData$applearn, sampleTrainingData$applhour)]
sampleTrainingDataSubsetColumns <- sampleTrainingData[sampleTrainingData$prevclsr, sampleTrainingData$gender, sampleTrainingData$white, sampleTrainingData$black, sampleTrainingData$aian, sampleTrainingData$asian, sampleTrainingData$nhpi, sampleTrainingData$appleduc, sampleTrainingData$majorimp, sampleTrainingData$applwork, sampleTrainingData$applearn, sampleTrainingData$applhour]
sampleTrainingDataSubsetColumns <- sampleTrainingData[prevclsr, gender, white, black, aian, asian, nhpi, appleduc, majorimp, applwork, applearn, applhour]
sampleTrainingDataSubsetColumns <- sampleTrainingData[c("prevclsr", "gender", "white", "black", "aian", "asian", "nhpi", "appleduc", "majorimp", "applwork", "applearn", "applhour")]
sampleTrainingDataSubsetColumns <- sampleTrainingData[c("prevclsr", "gender", "white", "black", "aian", "asian", "nhpi", "appleduc", "majorimp", "applwork", "applearn", "applhour", "outcome")]
str(sampleTrainingDataSubsetColumns)
sampleTrainingDataSubsetColumns[,1:8] = as.factor(sampleTrainingDataSubsetColumns[,1:8])
a <- lapply(sampleTrainingDataSubsetColumns, as.factor)
str(a)
a <- lapply(sampleTrainingDataSubsetColumns[1:8], as.factor)
str(a)
a <- lapply(sampleTrainingDataSubsetColumns[1:10], as.factor)
str(a)
a$applearn <- sampleTrainingDataSubsetColumns$applearn
a$applhour <- sampleTrainingDataSubsetColumns$applhour
a$outcome <- sampleTrainingDataSubsetColumns$outcome
str(a)
factorCols <- c("prevclsr","gender","white","black","aian","asian","nhpi","appleduc","majorimp","applwork")
factorCols <- c("prevclsr","gender","white","black","aian","asian","nhpi","appleduc","majorimp","applwork")
b[,factorCols]<- data.frame(apply(sampleTrainingDataSubsetColumns[factorCols], 2, as.factor))
sampleTrainingDataSubsetColumns[,factorCols]<- data.frame(apply(sampleTrainingDataSubsetColumns[factorCols], 2, as.factor))
inTrain <- createDataPartition(y=sampleTrainingDataSubsetColumns$outcome, p=0.7, list=FALSE)
library("caret", lib.loc="~/R/win-library/3.0")
library(caret)
inTrain <- createDataPartition(y=sampleTrainingDataSubsetColumns$outcome, p=0.7, list=FALSE)
validTrainDataTrain <- sampleTrainingDataSubsetColumns[inTrain,]
validTrainDataTest <- sampleTrainingDataSubsetColumns[-inTrain,]
library(randomForest)
random.forest <- train(validTrainDataTrain[,-13],
validTrainDataTrain$outcome,
tuneGrid=data.frame(mtry=3),
trControl=trainControl(method="none")
)
str(validTrainDataTrain)
validTrainDataTrain[,-13]
random.forest <- train(validTrainDataTrain[,-13],
validTrainDataTrain$outcome,
tuneGrid=data.frame(mtry=3),
trControl=trainControl(method="none")
)
modFit <- train(outcome~ .,data=sampleTrainingDataSubsetColumns,method="rf",prox=TRUE)
modFit <- train(outcome~ .,data=sampleTrainingDataSubsetColumns,method="rpart")
library("rattle", lib.loc="~/R/win-library/3.0")
source('~/.active-rstudio-document', echo=TRUE)
str(sampleTrainingDataSubsetColumns)
modFit <- train(outcome~ .,data=sampleTrainingDataSubsetColumns,method="rf")
